Token	POS-Tag	OOV	Id	Origem	Classe	Perturbada	Index	__next__	Granularidade	Tipo_Texto	Senten√ßa
How	SCONJ	0	17	17	1	0	0	1	0	1	How are the operations to push and pop elements in a stack implemented ?
are	AUX	0	17	17	1	0	1	2	0	1	How are the operations to push and pop elements in a stack implemented ?
the	DET	0	17	17	1	0	2	3	0	1	How are the operations to push and pop elements in a stack implemented ?
operations	NOUN	0	17	17	1	0	3	4	0	1	How are the operations to push and pop elements in a stack implemented ?
to	PART	0	17	17	1	0	4	5	0	1	How are the operations to push and pop elements in a stack implemented ?
push	VERB	0	17	17	1	1	5	6	0	1	How are the operations to push and pop elements in a stack implemented ?
and	CCONJ	0	17	17	1	0	6	7	0	1	How are the operations to push and pop elements in a stack implemented ?
pop	NOUN	0	17	17	1	0	7	8	0	1	How are the operations to push and pop elements in a stack implemented ?
elements	NOUN	0	17	17	1	0	8	9	0	1	How are the operations to push and pop elements in a stack implemented ?
in	ADP	0	17	17	1	0	9	10	0	1	How are the operations to push and pop elements in a stack implemented ?
a	DET	0	17	17	1	0	10	11	0	1	How are the operations to push and pop elements in a stack implemented ?
stack	NOUN	0	17	17	1	0	11	12	0	1	How are the operations to push and pop elements in a stack implemented ?
implemented	VERB	0	17	17	1	0	12	13	0	1	How are the operations to push and pop elements in a stack implemented ?
?	PUNCT	0	17	17	1	0	13	14	0	1	How are the operations to push and pop elements in a stack implemented ?
0	['SCONJ', 'AUX', 'DET', 'NOUN', 'PART', 'VERB', 'CCONJ', 'NOUN', 'NOUN', 'ADP', 'DET', 'NOUN', 'VERB', 'PUNCT']	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]	17	17	1	-1	-1		1	3	How are the operations to push and pop elements in a stack implemented ?
How	SCONJ	0	17_pert_0	17	0	0	0	16	0	0	How are the operations to push and pop elements in a stack implemented ?
are	AUX	0	17_pert_0	17	0	0	1	17	0	0	How are the operations to push and pop elements in a stack implemented ?
the	DET	0	17_pert_0	17	0	0	2	18	0	0	How are the operations to push and pop elements in a stack implemented ?
operations	NOUN	0	17_pert_0	17	0	0	3	19	0	0	How are the operations to push and pop elements in a stack implemented ?
to	PART	0	17_pert_0	17	0	0	4	20	0	0	How are the operations to push and pop elements in a stack implemented ?
push	VERB	0	17_pert_0	17	0	1	5	21	0	0	How are the operations to push and pop elements in a stack implemented ?
and	CCONJ	0	17_pert_0	17	0	0	6	22	0	0	How are the operations to push and pop elements in a stack implemented ?
pop	NOUN	0	17_pert_0	17	0	0	7	23	0	0	How are the operations to push and pop elements in a stack implemented ?
elements	NOUN	0	17_pert_0	17	0	0	8	24	0	0	How are the operations to push and pop elements in a stack implemented ?
in	ADP	0	17_pert_0	17	0	0	9	25	0	0	How are the operations to push and pop elements in a stack implemented ?
a	DET	0	17_pert_0	17	0	0	10	26	0	0	How are the operations to push and pop elements in a stack implemented ?
stack	NOUN	0	17_pert_0	17	0	0	11	27	0	0	How are the operations to push and pop elements in a stack implemented ?
implemented	VERB	0	17_pert_0	17	0	0	12	28	0	0	How are the operations to push and pop elements in a stack implemented ?
?	PUNCT	0	17_pert_0	17	0	0	13	29	0	0	How are the operations to push and pop elements in a stack implemented ?
1	['SCONJ', 'AUX', 'DET', 'NOUN', 'PART', 'VERB', 'CCONJ', 'NOUN', 'NOUN', 'ADP', 'DET', 'NOUN', 'VERB', 'PUNCT']	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]	17_pert_0	17	0	-1	-1		1	2	How are the operations to push and pop elements in a stack implemented ?
How	SCONJ	0	17_pert_1	17	0	0	0	31	0	0	How are the operations to pop and pop elements in a stack implemented ?
are	AUX	0	17_pert_1	17	0	0	1	32	0	0	How are the operations to pop and pop elements in a stack implemented ?
the	DET	0	17_pert_1	17	0	0	2	33	0	0	How are the operations to pop and pop elements in a stack implemented ?
operations	NOUN	0	17_pert_1	17	0	0	3	34	0	0	How are the operations to pop and pop elements in a stack implemented ?
to	PART	0	17_pert_1	17	0	0	4	35	0	0	How are the operations to pop and pop elements in a stack implemented ?
pop	VERB	0	17_pert_1	17	0	0	5	36	0	0	How are the operations to pop and pop elements in a stack implemented ?
and	CCONJ	0	17_pert_1	17	0	0	6	37	0	0	How are the operations to pop and pop elements in a stack implemented ?
pop	NOUN	0	17_pert_1	17	0	0	7	38	0	0	How are the operations to pop and pop elements in a stack implemented ?
elements	NOUN	0	17_pert_1	17	0	0	8	39	0	0	How are the operations to pop and pop elements in a stack implemented ?
in	ADP	0	17_pert_1	17	0	0	9	40	0	0	How are the operations to pop and pop elements in a stack implemented ?
a	DET	0	17_pert_1	17	0	0	10	41	0	0	How are the operations to pop and pop elements in a stack implemented ?
stack	NOUN	0	17_pert_1	17	0	0	11	42	0	0	How are the operations to pop and pop elements in a stack implemented ?
implemented	VERB	0	17_pert_1	17	0	0	12	43	0	0	How are the operations to pop and pop elements in a stack implemented ?
?	PUNCT	0	17_pert_1	17	0	0	13	44	0	0	How are the operations to pop and pop elements in a stack implemented ?
2	['SCONJ', 'AUX', 'DET', 'NOUN', 'PART', 'VERB', 'CCONJ', 'NOUN', 'NOUN', 'ADP', 'DET', 'NOUN', 'VERB', 'PUNCT']	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]	17_pert_1	17	0	-1	-1		1	2	How are the operations to pop and pop elements in a stack implemented ?
How	SCONJ	0	17_pert_2	17	0	0	0	46	0	0	How are the operations to drop and pop elements in a stack implemented ?
are	AUX	0	17_pert_2	17	0	0	1	47	0	0	How are the operations to drop and pop elements in a stack implemented ?
the	DET	0	17_pert_2	17	0	0	2	48	0	0	How are the operations to drop and pop elements in a stack implemented ?
operations	NOUN	0	17_pert_2	17	0	0	3	49	0	0	How are the operations to drop and pop elements in a stack implemented ?
to	PART	0	17_pert_2	17	0	0	4	50	0	0	How are the operations to drop and pop elements in a stack implemented ?
drop	VERB	0	17_pert_2	17	0	1	5	51	0	0	How are the operations to drop and pop elements in a stack implemented ?
and	CCONJ	0	17_pert_2	17	0	0	6	52	0	0	How are the operations to drop and pop elements in a stack implemented ?
pop	NOUN	0	17_pert_2	17	0	0	7	53	0	0	How are the operations to drop and pop elements in a stack implemented ?
elements	NOUN	0	17_pert_2	17	0	0	8	54	0	0	How are the operations to drop and pop elements in a stack implemented ?
in	ADP	0	17_pert_2	17	0	0	9	55	0	0	How are the operations to drop and pop elements in a stack implemented ?
a	DET	0	17_pert_2	17	0	0	10	56	0	0	How are the operations to drop and pop elements in a stack implemented ?
stack	NOUN	0	17_pert_2	17	0	0	11	57	0	0	How are the operations to drop and pop elements in a stack implemented ?
implemented	VERB	0	17_pert_2	17	0	0	12	58	0	0	How are the operations to drop and pop elements in a stack implemented ?
?	PUNCT	0	17_pert_2	17	0	0	13	59	0	0	How are the operations to drop and pop elements in a stack implemented ?
3	['SCONJ', 'AUX', 'DET', 'NOUN', 'PART', 'VERB', 'CCONJ', 'NOUN', 'NOUN', 'ADP', 'DET', 'NOUN', 'VERB', 'PUNCT']	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]	17_pert_2	17	0	-1	-1		1	2	How are the operations to drop and pop elements in a stack implemented ?
How	SCONJ	0	17_pert_3	17	0	0	0	61	0	0	How are the operations to pull and pop elements in a stack implemented ?
are	AUX	0	17_pert_3	17	0	0	1	62	0	0	How are the operations to pull and pop elements in a stack implemented ?
the	DET	0	17_pert_3	17	0	0	2	63	0	0	How are the operations to pull and pop elements in a stack implemented ?
operations	NOUN	0	17_pert_3	17	0	0	3	64	0	0	How are the operations to pull and pop elements in a stack implemented ?
to	PART	0	17_pert_3	17	0	0	4	65	0	0	How are the operations to pull and pop elements in a stack implemented ?
pull	VERB	0	17_pert_3	17	0	1	5	66	0	0	How are the operations to pull and pop elements in a stack implemented ?
and	CCONJ	0	17_pert_3	17	0	0	6	67	0	0	How are the operations to pull and pop elements in a stack implemented ?
pop	NOUN	0	17_pert_3	17	0	0	7	68	0	0	How are the operations to pull and pop elements in a stack implemented ?
elements	NOUN	0	17_pert_3	17	0	0	8	69	0	0	How are the operations to pull and pop elements in a stack implemented ?
in	ADP	0	17_pert_3	17	0	0	9	70	0	0	How are the operations to pull and pop elements in a stack implemented ?
a	DET	0	17_pert_3	17	0	0	10	71	0	0	How are the operations to pull and pop elements in a stack implemented ?
stack	NOUN	0	17_pert_3	17	0	0	11	72	0	0	How are the operations to pull and pop elements in a stack implemented ?
implemented	VERB	0	17_pert_3	17	0	0	12	73	0	0	How are the operations to pull and pop elements in a stack implemented ?
?	PUNCT	0	17_pert_3	17	0	0	13	74	0	0	How are the operations to pull and pop elements in a stack implemented ?
4	['SCONJ', 'AUX', 'DET', 'NOUN', 'PART', 'VERB', 'CCONJ', 'NOUN', 'NOUN', 'ADP', 'DET', 'NOUN', 'VERB', 'PUNCT']	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]	17_pert_3	17	0	-1	-1		1	2	How are the operations to pull and pop elements in a stack implemented ?
How	SCONJ	0	17_pert_4	17	0	0	0	76	0	0	How are the operations to drag and pop elements in a stack implemented ?
are	AUX	0	17_pert_4	17	0	0	1	77	0	0	How are the operations to drag and pop elements in a stack implemented ?
the	DET	0	17_pert_4	17	0	0	2	78	0	0	How are the operations to drag and pop elements in a stack implemented ?
operations	NOUN	0	17_pert_4	17	0	0	3	79	0	0	How are the operations to drag and pop elements in a stack implemented ?
to	PART	0	17_pert_4	17	0	0	4	80	0	0	How are the operations to drag and pop elements in a stack implemented ?
drag	VERB	0	17_pert_4	17	0	1	5	81	0	0	How are the operations to drag and pop elements in a stack implemented ?
and	CCONJ	0	17_pert_4	17	0	0	6	82	0	0	How are the operations to drag and pop elements in a stack implemented ?
pop	NOUN	0	17_pert_4	17	0	0	7	83	0	0	How are the operations to drag and pop elements in a stack implemented ?
elements	NOUN	0	17_pert_4	17	0	0	8	84	0	0	How are the operations to drag and pop elements in a stack implemented ?
in	ADP	0	17_pert_4	17	0	0	9	85	0	0	How are the operations to drag and pop elements in a stack implemented ?
a	DET	0	17_pert_4	17	0	0	10	86	0	0	How are the operations to drag and pop elements in a stack implemented ?
stack	NOUN	0	17_pert_4	17	0	0	11	87	0	0	How are the operations to drag and pop elements in a stack implemented ?
implemented	VERB	0	17_pert_4	17	0	0	12	88	0	0	How are the operations to drag and pop elements in a stack implemented ?
?	PUNCT	0	17_pert_4	17	0	0	13	89	0	0	How are the operations to drag and pop elements in a stack implemented ?
5	['SCONJ', 'AUX', 'DET', 'NOUN', 'PART', 'VERB', 'CCONJ', 'NOUN', 'NOUN', 'ADP', 'DET', 'NOUN', 'VERB', 'PUNCT']	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]	17_pert_4	17	0	-1	-1		1	2	How are the operations to drag and pop elements in a stack implemented ?
How	SCONJ	0	17_pert_5	17	0	0	0	91	0	0	How are the operations to dump and pop elements in a stack implemented ?
are	AUX	0	17_pert_5	17	0	0	1	92	0	0	How are the operations to dump and pop elements in a stack implemented ?
the	DET	0	17_pert_5	17	0	0	2	93	0	0	How are the operations to dump and pop elements in a stack implemented ?
operations	NOUN	0	17_pert_5	17	0	0	3	94	0	0	How are the operations to dump and pop elements in a stack implemented ?
to	PART	0	17_pert_5	17	0	0	4	95	0	0	How are the operations to dump and pop elements in a stack implemented ?
dump	VERB	0	17_pert_5	17	0	1	5	96	0	0	How are the operations to dump and pop elements in a stack implemented ?
and	CCONJ	0	17_pert_5	17	0	0	6	97	0	0	How are the operations to dump and pop elements in a stack implemented ?
pop	NOUN	0	17_pert_5	17	0	0	7	98	0	0	How are the operations to dump and pop elements in a stack implemented ?
elements	NOUN	0	17_pert_5	17	0	0	8	99	0	0	How are the operations to dump and pop elements in a stack implemented ?
in	ADP	0	17_pert_5	17	0	0	9	100	0	0	How are the operations to dump and pop elements in a stack implemented ?
a	DET	0	17_pert_5	17	0	0	10	101	0	0	How are the operations to dump and pop elements in a stack implemented ?
stack	NOUN	0	17_pert_5	17	0	0	11	102	0	0	How are the operations to dump and pop elements in a stack implemented ?
implemented	VERB	0	17_pert_5	17	0	0	12	103	0	0	How are the operations to dump and pop elements in a stack implemented ?
?	PUNCT	0	17_pert_5	17	0	0	13	104	0	0	How are the operations to dump and pop elements in a stack implemented ?
6	['SCONJ', 'AUX', 'DET', 'NOUN', 'PART', 'VERB', 'CCONJ', 'NOUN', 'NOUN', 'ADP', 'DET', 'NOUN', 'VERB', 'PUNCT']	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]	17_pert_5	17	0	-1	-1		1	2	How are the operations to dump and pop elements in a stack implemented ?
How	SCONJ	0	17_pert_6	17	0	0	0	106	0	0	How are the operations to tap and pop elements in a stack implemented ?
are	AUX	0	17_pert_6	17	0	0	1	107	0	0	How are the operations to tap and pop elements in a stack implemented ?
the	DET	0	17_pert_6	17	0	0	2	108	0	0	How are the operations to tap and pop elements in a stack implemented ?
operations	NOUN	0	17_pert_6	17	0	0	3	109	0	0	How are the operations to tap and pop elements in a stack implemented ?
to	PART	0	17_pert_6	17	0	0	4	110	0	0	How are the operations to tap and pop elements in a stack implemented ?
tap	VERB	0	17_pert_6	17	0	1	5	111	0	0	How are the operations to tap and pop elements in a stack implemented ?
and	CCONJ	0	17_pert_6	17	0	0	6	112	0	0	How are the operations to tap and pop elements in a stack implemented ?
pop	NOUN	0	17_pert_6	17	0	0	7	113	0	0	How are the operations to tap and pop elements in a stack implemented ?
elements	NOUN	0	17_pert_6	17	0	0	8	114	0	0	How are the operations to tap and pop elements in a stack implemented ?
in	ADP	0	17_pert_6	17	0	0	9	115	0	0	How are the operations to tap and pop elements in a stack implemented ?
a	DET	0	17_pert_6	17	0	0	10	116	0	0	How are the operations to tap and pop elements in a stack implemented ?
stack	NOUN	0	17_pert_6	17	0	0	11	117	0	0	How are the operations to tap and pop elements in a stack implemented ?
implemented	VERB	0	17_pert_6	17	0	0	12	118	0	0	How are the operations to tap and pop elements in a stack implemented ?
?	PUNCT	0	17_pert_6	17	0	0	13	119	0	0	How are the operations to tap and pop elements in a stack implemented ?
7	['SCONJ', 'AUX', 'DET', 'NOUN', 'PART', 'VERB', 'CCONJ', 'NOUN', 'NOUN', 'ADP', 'DET', 'NOUN', 'VERB', 'PUNCT']	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]	17_pert_6	17	0	-1	-1		1	2	How are the operations to tap and pop elements in a stack implemented ?
How	SCONJ	0	17_pert_7	17	0	0	0	121	0	0	How are the operations to roll and pop elements in a stack implemented ?
are	AUX	0	17_pert_7	17	0	0	1	122	0	0	How are the operations to roll and pop elements in a stack implemented ?
the	DET	0	17_pert_7	17	0	0	2	123	0	0	How are the operations to roll and pop elements in a stack implemented ?
operations	NOUN	0	17_pert_7	17	0	0	3	124	0	0	How are the operations to roll and pop elements in a stack implemented ?
to	PART	0	17_pert_7	17	0	0	4	125	0	0	How are the operations to roll and pop elements in a stack implemented ?
roll	VERB	0	17_pert_7	17	0	1	5	126	0	0	How are the operations to roll and pop elements in a stack implemented ?
and	CCONJ	0	17_pert_7	17	0	0	6	127	0	0	How are the operations to roll and pop elements in a stack implemented ?
pop	NOUN	0	17_pert_7	17	0	0	7	128	0	0	How are the operations to roll and pop elements in a stack implemented ?
elements	NOUN	0	17_pert_7	17	0	0	8	129	0	0	How are the operations to roll and pop elements in a stack implemented ?
in	ADP	0	17_pert_7	17	0	0	9	130	0	0	How are the operations to roll and pop elements in a stack implemented ?
a	DET	0	17_pert_7	17	0	0	10	131	0	0	How are the operations to roll and pop elements in a stack implemented ?
stack	NOUN	0	17_pert_7	17	0	0	11	132	0	0	How are the operations to roll and pop elements in a stack implemented ?
implemented	VERB	0	17_pert_7	17	0	0	12	133	0	0	How are the operations to roll and pop elements in a stack implemented ?
?	PUNCT	0	17_pert_7	17	0	0	13	134	0	0	How are the operations to roll and pop elements in a stack implemented ?
8	['SCONJ', 'AUX', 'DET', 'NOUN', 'PART', 'VERB', 'CCONJ', 'NOUN', 'NOUN', 'ADP', 'DET', 'NOUN', 'VERB', 'PUNCT']	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]	17_pert_7	17	0	-1	-1		1	2	How are the operations to roll and pop elements in a stack implemented ?
How	SCONJ	0	17_pert_8	17	0	0	0	136	0	0	How are the operations to put and pop elements in a stack implemented ?
are	AUX	0	17_pert_8	17	0	0	1	137	0	0	How are the operations to put and pop elements in a stack implemented ?
the	DET	0	17_pert_8	17	0	0	2	138	0	0	How are the operations to put and pop elements in a stack implemented ?
operations	NOUN	0	17_pert_8	17	0	0	3	139	0	0	How are the operations to put and pop elements in a stack implemented ?
to	PART	0	17_pert_8	17	0	0	4	140	0	0	How are the operations to put and pop elements in a stack implemented ?
put	VERB	0	17_pert_8	17	0	1	5	141	0	0	How are the operations to put and pop elements in a stack implemented ?
and	CCONJ	0	17_pert_8	17	0	0	6	142	0	0	How are the operations to put and pop elements in a stack implemented ?
pop	VERB	0	17_pert_8	17	0	0	7	143	0	0	How are the operations to put and pop elements in a stack implemented ?
elements	NOUN	0	17_pert_8	17	0	0	8	144	0	0	How are the operations to put and pop elements in a stack implemented ?
in	ADP	0	17_pert_8	17	0	0	9	145	0	0	How are the operations to put and pop elements in a stack implemented ?
a	DET	0	17_pert_8	17	0	0	10	146	0	0	How are the operations to put and pop elements in a stack implemented ?
stack	NOUN	0	17_pert_8	17	0	0	11	147	0	0	How are the operations to put and pop elements in a stack implemented ?
implemented	VERB	0	17_pert_8	17	0	0	12	148	0	0	How are the operations to put and pop elements in a stack implemented ?
?	PUNCT	0	17_pert_8	17	0	0	13	149	0	0	How are the operations to put and pop elements in a stack implemented ?
9	['SCONJ', 'AUX', 'DET', 'NOUN', 'PART', 'VERB', 'CCONJ', 'VERB', 'NOUN', 'ADP', 'DET', 'NOUN', 'VERB', 'PUNCT']	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]	17_pert_8	17	0	-1	-1		1	2	How are the operations to put and pop elements in a stack implemented ?
How	SCONJ	0	17_pert_9	17	0	0	0	151	0	0	How are the operations to smash and pop elements in a stack implemented ?
are	AUX	0	17_pert_9	17	0	0	1	152	0	0	How are the operations to smash and pop elements in a stack implemented ?
the	DET	0	17_pert_9	17	0	0	2	153	0	0	How are the operations to smash and pop elements in a stack implemented ?
operations	NOUN	0	17_pert_9	17	0	0	3	154	0	0	How are the operations to smash and pop elements in a stack implemented ?
to	PART	0	17_pert_9	17	0	0	4	155	0	0	How are the operations to smash and pop elements in a stack implemented ?
smash	VERB	0	17_pert_9	17	0	1	5	156	0	0	How are the operations to smash and pop elements in a stack implemented ?
and	CCONJ	0	17_pert_9	17	0	0	6	157	0	0	How are the operations to smash and pop elements in a stack implemented ?
pop	NOUN	0	17_pert_9	17	0	0	7	158	0	0	How are the operations to smash and pop elements in a stack implemented ?
elements	NOUN	0	17_pert_9	17	0	0	8	159	0	0	How are the operations to smash and pop elements in a stack implemented ?
in	ADP	0	17_pert_9	17	0	0	9	160	0	0	How are the operations to smash and pop elements in a stack implemented ?
a	DET	0	17_pert_9	17	0	0	10	161	0	0	How are the operations to smash and pop elements in a stack implemented ?
stack	NOUN	0	17_pert_9	17	0	0	11	162	0	0	How are the operations to smash and pop elements in a stack implemented ?
implemented	VERB	0	17_pert_9	17	0	0	12	163	0	0	How are the operations to smash and pop elements in a stack implemented ?
?	PUNCT	0	17_pert_9	17	0	0	13	164	0	0	How are the operations to smash and pop elements in a stack implemented ?
10	['SCONJ', 'AUX', 'DET', 'NOUN', 'PART', 'VERB', 'CCONJ', 'NOUN', 'NOUN', 'ADP', 'DET', 'NOUN', 'VERB', 'PUNCT']	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]	17_pert_9	17	0	-1	-1		1	2	How are the operations to smash and pop elements in a stack implemented ?
How	SCONJ	0	17_pert_10	17	0	0	0	166	0	0	How are the operations to throw and pop elements in a stack implemented ?
are	AUX	0	17_pert_10	17	0	0	1	167	0	0	How are the operations to throw and pop elements in a stack implemented ?
the	DET	0	17_pert_10	17	0	0	2	168	0	0	How are the operations to throw and pop elements in a stack implemented ?
operations	NOUN	0	17_pert_10	17	0	0	3	169	0	0	How are the operations to throw and pop elements in a stack implemented ?
to	PART	0	17_pert_10	17	0	0	4	170	0	0	How are the operations to throw and pop elements in a stack implemented ?
throw	VERB	0	17_pert_10	17	0	1	5	171	0	0	How are the operations to throw and pop elements in a stack implemented ?
and	CCONJ	0	17_pert_10	17	0	0	6	172	0	0	How are the operations to throw and pop elements in a stack implemented ?
pop	NOUN	0	17_pert_10	17	0	0	7	173	0	0	How are the operations to throw and pop elements in a stack implemented ?
elements	NOUN	0	17_pert_10	17	0	0	8	174	0	0	How are the operations to throw and pop elements in a stack implemented ?
in	ADP	0	17_pert_10	17	0	0	9	175	0	0	How are the operations to throw and pop elements in a stack implemented ?
a	DET	0	17_pert_10	17	0	0	10	176	0	0	How are the operations to throw and pop elements in a stack implemented ?
stack	NOUN	0	17_pert_10	17	0	0	11	177	0	0	How are the operations to throw and pop elements in a stack implemented ?
implemented	VERB	0	17_pert_10	17	0	0	12	178	0	0	How are the operations to throw and pop elements in a stack implemented ?
?	PUNCT	0	17_pert_10	17	0	0	13	179	0	0	How are the operations to throw and pop elements in a stack implemented ?
11	['SCONJ', 'AUX', 'DET', 'NOUN', 'PART', 'VERB', 'CCONJ', 'NOUN', 'NOUN', 'ADP', 'DET', 'NOUN', 'VERB', 'PUNCT']	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]	17_pert_10	17	0	-1	-1		1	2	How are the operations to throw and pop elements in a stack implemented ?
How	SCONJ	0	17_pert_11	17	0	0	0	181	0	0	How are the operations to grab and pop elements in a stack implemented ?
are	AUX	0	17_pert_11	17	0	0	1	182	0	0	How are the operations to grab and pop elements in a stack implemented ?
the	DET	0	17_pert_11	17	0	0	2	183	0	0	How are the operations to grab and pop elements in a stack implemented ?
operations	NOUN	0	17_pert_11	17	0	0	3	184	0	0	How are the operations to grab and pop elements in a stack implemented ?
to	PART	0	17_pert_11	17	0	0	4	185	0	0	How are the operations to grab and pop elements in a stack implemented ?
grab	VERB	0	17_pert_11	17	0	1	5	186	0	0	How are the operations to grab and pop elements in a stack implemented ?
and	CCONJ	0	17_pert_11	17	0	0	6	187	0	0	How are the operations to grab and pop elements in a stack implemented ?
pop	VERB	0	17_pert_11	17	0	0	7	188	0	0	How are the operations to grab and pop elements in a stack implemented ?
elements	NOUN	0	17_pert_11	17	0	0	8	189	0	0	How are the operations to grab and pop elements in a stack implemented ?
in	ADP	0	17_pert_11	17	0	0	9	190	0	0	How are the operations to grab and pop elements in a stack implemented ?
a	DET	0	17_pert_11	17	0	0	10	191	0	0	How are the operations to grab and pop elements in a stack implemented ?
stack	NOUN	0	17_pert_11	17	0	0	11	192	0	0	How are the operations to grab and pop elements in a stack implemented ?
implemented	VERB	0	17_pert_11	17	0	0	12	193	0	0	How are the operations to grab and pop elements in a stack implemented ?
?	PUNCT	0	17_pert_11	17	0	0	13	194	0	0	How are the operations to grab and pop elements in a stack implemented ?
12	['SCONJ', 'AUX', 'DET', 'NOUN', 'PART', 'VERB', 'CCONJ', 'VERB', 'NOUN', 'ADP', 'DET', 'NOUN', 'VERB', 'PUNCT']	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]	17_pert_11	17	0	-1	-1		1	2	How are the operations to grab and pop elements in a stack implemented ?
How	SCONJ	0	17_pert_12	17	0	0	0	196	0	0	How are the operations to hit and pop elements in a stack implemented ?
are	AUX	0	17_pert_12	17	0	0	1	197	0	0	How are the operations to hit and pop elements in a stack implemented ?
the	DET	0	17_pert_12	17	0	0	2	198	0	0	How are the operations to hit and pop elements in a stack implemented ?
operations	NOUN	0	17_pert_12	17	0	0	3	199	0	0	How are the operations to hit and pop elements in a stack implemented ?
to	PART	0	17_pert_12	17	0	0	4	200	0	0	How are the operations to hit and pop elements in a stack implemented ?
hit	VERB	0	17_pert_12	17	0	1	5	201	0	0	How are the operations to hit and pop elements in a stack implemented ?
and	CCONJ	0	17_pert_12	17	0	0	6	202	0	0	How are the operations to hit and pop elements in a stack implemented ?
pop	VERB	0	17_pert_12	17	0	0	7	203	0	0	How are the operations to hit and pop elements in a stack implemented ?
elements	NOUN	0	17_pert_12	17	0	0	8	204	0	0	How are the operations to hit and pop elements in a stack implemented ?
in	ADP	0	17_pert_12	17	0	0	9	205	0	0	How are the operations to hit and pop elements in a stack implemented ?
a	DET	0	17_pert_12	17	0	0	10	206	0	0	How are the operations to hit and pop elements in a stack implemented ?
stack	NOUN	0	17_pert_12	17	0	0	11	207	0	0	How are the operations to hit and pop elements in a stack implemented ?
implemented	VERB	0	17_pert_12	17	0	0	12	208	0	0	How are the operations to hit and pop elements in a stack implemented ?
?	PUNCT	0	17_pert_12	17	0	0	13	209	0	0	How are the operations to hit and pop elements in a stack implemented ?
13	['SCONJ', 'AUX', 'DET', 'NOUN', 'PART', 'VERB', 'CCONJ', 'VERB', 'NOUN', 'ADP', 'DET', 'NOUN', 'VERB', 'PUNCT']	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]	17_pert_12	17	0	-1	-1		1	2	How are the operations to hit and pop elements in a stack implemented ?
How	SCONJ	0	17_pert_13	17	0	0	0	211	0	0	How are the operations to load and pop elements in a stack implemented ?
are	AUX	0	17_pert_13	17	0	0	1	212	0	0	How are the operations to load and pop elements in a stack implemented ?
the	DET	0	17_pert_13	17	0	0	2	213	0	0	How are the operations to load and pop elements in a stack implemented ?
operations	NOUN	0	17_pert_13	17	0	0	3	214	0	0	How are the operations to load and pop elements in a stack implemented ?
to	PART	0	17_pert_13	17	0	0	4	215	0	0	How are the operations to load and pop elements in a stack implemented ?
load	VERB	0	17_pert_13	17	0	1	5	216	0	0	How are the operations to load and pop elements in a stack implemented ?
and	CCONJ	0	17_pert_13	17	0	0	6	217	0	0	How are the operations to load and pop elements in a stack implemented ?
pop	NOUN	0	17_pert_13	17	0	0	7	218	0	0	How are the operations to load and pop elements in a stack implemented ?
elements	NOUN	0	17_pert_13	17	0	0	8	219	0	0	How are the operations to load and pop elements in a stack implemented ?
in	ADP	0	17_pert_13	17	0	0	9	220	0	0	How are the operations to load and pop elements in a stack implemented ?
a	DET	0	17_pert_13	17	0	0	10	221	0	0	How are the operations to load and pop elements in a stack implemented ?
stack	NOUN	0	17_pert_13	17	0	0	11	222	0	0	How are the operations to load and pop elements in a stack implemented ?
implemented	VERB	0	17_pert_13	17	0	0	12	223	0	0	How are the operations to load and pop elements in a stack implemented ?
?	PUNCT	0	17_pert_13	17	0	0	13	224	0	0	How are the operations to load and pop elements in a stack implemented ?
14	['SCONJ', 'AUX', 'DET', 'NOUN', 'PART', 'VERB', 'CCONJ', 'NOUN', 'NOUN', 'ADP', 'DET', 'NOUN', 'VERB', 'PUNCT']	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]	17_pert_13	17	0	-1	-1		1	2	How are the operations to load and pop elements in a stack implemented ?
How	SCONJ	0	17_pert_14	17	0	0	0	226	0	0	How are the operations to scratch and pop elements in a stack implemented ?
are	AUX	0	17_pert_14	17	0	0	1	227	0	0	How are the operations to scratch and pop elements in a stack implemented ?
the	DET	0	17_pert_14	17	0	0	2	228	0	0	How are the operations to scratch and pop elements in a stack implemented ?
operations	NOUN	0	17_pert_14	17	0	0	3	229	0	0	How are the operations to scratch and pop elements in a stack implemented ?
to	PART	0	17_pert_14	17	0	0	4	230	0	0	How are the operations to scratch and pop elements in a stack implemented ?
scratch	VERB	0	17_pert_14	17	0	1	5	231	0	0	How are the operations to scratch and pop elements in a stack implemented ?
and	CCONJ	0	17_pert_14	17	0	0	6	232	0	0	How are the operations to scratch and pop elements in a stack implemented ?
pop	NOUN	0	17_pert_14	17	0	0	7	233	0	0	How are the operations to scratch and pop elements in a stack implemented ?
elements	NOUN	0	17_pert_14	17	0	0	8	234	0	0	How are the operations to scratch and pop elements in a stack implemented ?
in	ADP	0	17_pert_14	17	0	0	9	235	0	0	How are the operations to scratch and pop elements in a stack implemented ?
a	DET	0	17_pert_14	17	0	0	10	236	0	0	How are the operations to scratch and pop elements in a stack implemented ?
stack	NOUN	0	17_pert_14	17	0	0	11	237	0	0	How are the operations to scratch and pop elements in a stack implemented ?
implemented	VERB	0	17_pert_14	17	0	0	12	238	0	0	How are the operations to scratch and pop elements in a stack implemented ?
?	PUNCT	0	17_pert_14	17	0	0	13	239	0	0	How are the operations to scratch and pop elements in a stack implemented ?
15	['SCONJ', 'AUX', 'DET', 'NOUN', 'PART', 'VERB', 'CCONJ', 'NOUN', 'NOUN', 'ADP', 'DET', 'NOUN', 'VERB', 'PUNCT']	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]	17_pert_14	17	0	-1	-1		1	2	How are the operations to scratch and pop elements in a stack implemented ?
How	SCONJ	0	17_pert_15	17	0	0	0	241	0	0	How are the operations to flip and pop elements in a stack implemented ?
are	AUX	0	17_pert_15	17	0	0	1	242	0	0	How are the operations to flip and pop elements in a stack implemented ?
the	DET	0	17_pert_15	17	0	0	2	243	0	0	How are the operations to flip and pop elements in a stack implemented ?
operations	NOUN	0	17_pert_15	17	0	0	3	244	0	0	How are the operations to flip and pop elements in a stack implemented ?
to	PART	0	17_pert_15	17	0	0	4	245	0	0	How are the operations to flip and pop elements in a stack implemented ?
flip	VERB	0	17_pert_15	17	0	1	5	246	0	0	How are the operations to flip and pop elements in a stack implemented ?
and	CCONJ	0	17_pert_15	17	0	0	6	247	0	0	How are the operations to flip and pop elements in a stack implemented ?
pop	VERB	0	17_pert_15	17	0	0	7	248	0	0	How are the operations to flip and pop elements in a stack implemented ?
elements	NOUN	0	17_pert_15	17	0	0	8	249	0	0	How are the operations to flip and pop elements in a stack implemented ?
in	ADP	0	17_pert_15	17	0	0	9	250	0	0	How are the operations to flip and pop elements in a stack implemented ?
a	DET	0	17_pert_15	17	0	0	10	251	0	0	How are the operations to flip and pop elements in a stack implemented ?
stack	NOUN	0	17_pert_15	17	0	0	11	252	0	0	How are the operations to flip and pop elements in a stack implemented ?
implemented	VERB	0	17_pert_15	17	0	0	12	253	0	0	How are the operations to flip and pop elements in a stack implemented ?
?	PUNCT	0	17_pert_15	17	0	0	13	254	0	0	How are the operations to flip and pop elements in a stack implemented ?
16	['SCONJ', 'AUX', 'DET', 'NOUN', 'PART', 'VERB', 'CCONJ', 'VERB', 'NOUN', 'ADP', 'DET', 'NOUN', 'VERB', 'PUNCT']	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]	17_pert_15	17	0	-1	-1		1	2	How are the operations to flip and pop elements in a stack implemented ?
How	SCONJ	0	17_pert_16	17	0	0	0	256	0	0	How are the operations to press and pop elements in a stack implemented ?
are	AUX	0	17_pert_16	17	0	0	1	257	0	0	How are the operations to press and pop elements in a stack implemented ?
the	DET	0	17_pert_16	17	0	0	2	258	0	0	How are the operations to press and pop elements in a stack implemented ?
operations	NOUN	0	17_pert_16	17	0	0	3	259	0	0	How are the operations to press and pop elements in a stack implemented ?
to	PART	0	17_pert_16	17	0	0	4	260	0	0	How are the operations to press and pop elements in a stack implemented ?
press	VERB	0	17_pert_16	17	0	1	5	261	0	0	How are the operations to press and pop elements in a stack implemented ?
and	CCONJ	0	17_pert_16	17	0	0	6	262	0	0	How are the operations to press and pop elements in a stack implemented ?
pop	NOUN	0	17_pert_16	17	0	0	7	263	0	0	How are the operations to press and pop elements in a stack implemented ?
elements	NOUN	0	17_pert_16	17	0	0	8	264	0	0	How are the operations to press and pop elements in a stack implemented ?
in	ADP	0	17_pert_16	17	0	0	9	265	0	0	How are the operations to press and pop elements in a stack implemented ?
a	DET	0	17_pert_16	17	0	0	10	266	0	0	How are the operations to press and pop elements in a stack implemented ?
stack	NOUN	0	17_pert_16	17	0	0	11	267	0	0	How are the operations to press and pop elements in a stack implemented ?
implemented	VERB	0	17_pert_16	17	0	0	12	268	0	0	How are the operations to press and pop elements in a stack implemented ?
?	PUNCT	0	17_pert_16	17	0	0	13	269	0	0	How are the operations to press and pop elements in a stack implemented ?
17	['SCONJ', 'AUX', 'DET', 'NOUN', 'PART', 'VERB', 'CCONJ', 'NOUN', 'NOUN', 'ADP', 'DET', 'NOUN', 'VERB', 'PUNCT']	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]	17_pert_16	17	0	-1	-1		1	2	How are the operations to press and pop elements in a stack implemented ?
How	SCONJ	0	17_pert_17	17	0	0	0	271	0	0	How are the operations to set and pop elements in a stack implemented ?
are	AUX	0	17_pert_17	17	0	0	1	272	0	0	How are the operations to set and pop elements in a stack implemented ?
the	DET	0	17_pert_17	17	0	0	2	273	0	0	How are the operations to set and pop elements in a stack implemented ?
operations	NOUN	0	17_pert_17	17	0	0	3	274	0	0	How are the operations to set and pop elements in a stack implemented ?
to	PART	0	17_pert_17	17	0	0	4	275	0	0	How are the operations to set and pop elements in a stack implemented ?
set	VERB	0	17_pert_17	17	0	1	5	276	0	0	How are the operations to set and pop elements in a stack implemented ?
and	CCONJ	0	17_pert_17	17	0	0	6	277	0	0	How are the operations to set and pop elements in a stack implemented ?
pop	VERB	0	17_pert_17	17	0	0	7	278	0	0	How are the operations to set and pop elements in a stack implemented ?
elements	NOUN	0	17_pert_17	17	0	0	8	279	0	0	How are the operations to set and pop elements in a stack implemented ?
in	ADP	0	17_pert_17	17	0	0	9	280	0	0	How are the operations to set and pop elements in a stack implemented ?
a	DET	0	17_pert_17	17	0	0	10	281	0	0	How are the operations to set and pop elements in a stack implemented ?
stack	NOUN	0	17_pert_17	17	0	0	11	282	0	0	How are the operations to set and pop elements in a stack implemented ?
implemented	VERB	0	17_pert_17	17	0	0	12	283	0	0	How are the operations to set and pop elements in a stack implemented ?
?	PUNCT	0	17_pert_17	17	0	0	13	284	0	0	How are the operations to set and pop elements in a stack implemented ?
18	['SCONJ', 'AUX', 'DET', 'NOUN', 'PART', 'VERB', 'CCONJ', 'VERB', 'NOUN', 'ADP', 'DET', 'NOUN', 'VERB', 'PUNCT']	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]	17_pert_17	17	0	-1	-1		1	2	How are the operations to set and pop elements in a stack implemented ?
How	SCONJ	0	17_pert_18	17	0	0	0	286	0	0	How are the operations to sink and pop elements in a stack implemented ?
are	AUX	0	17_pert_18	17	0	0	1	287	0	0	How are the operations to sink and pop elements in a stack implemented ?
the	DET	0	17_pert_18	17	0	0	2	288	0	0	How are the operations to sink and pop elements in a stack implemented ?
operations	NOUN	0	17_pert_18	17	0	0	3	289	0	0	How are the operations to sink and pop elements in a stack implemented ?
to	PART	0	17_pert_18	17	0	0	4	290	0	0	How are the operations to sink and pop elements in a stack implemented ?
sink	VERB	0	17_pert_18	17	0	1	5	291	0	0	How are the operations to sink and pop elements in a stack implemented ?
and	CCONJ	0	17_pert_18	17	0	0	6	292	0	0	How are the operations to sink and pop elements in a stack implemented ?
pop	VERB	0	17_pert_18	17	0	0	7	293	0	0	How are the operations to sink and pop elements in a stack implemented ?
elements	NOUN	0	17_pert_18	17	0	0	8	294	0	0	How are the operations to sink and pop elements in a stack implemented ?
in	ADP	0	17_pert_18	17	0	0	9	295	0	0	How are the operations to sink and pop elements in a stack implemented ?
a	DET	0	17_pert_18	17	0	0	10	296	0	0	How are the operations to sink and pop elements in a stack implemented ?
stack	NOUN	0	17_pert_18	17	0	0	11	297	0	0	How are the operations to sink and pop elements in a stack implemented ?
implemented	VERB	0	17_pert_18	17	0	0	12	298	0	0	How are the operations to sink and pop elements in a stack implemented ?
?	PUNCT	0	17_pert_18	17	0	0	13	299	0	0	How are the operations to sink and pop elements in a stack implemented ?
19	['SCONJ', 'AUX', 'DET', 'NOUN', 'PART', 'VERB', 'CCONJ', 'VERB', 'NOUN', 'ADP', 'DET', 'NOUN', 'VERB', 'PUNCT']	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]	17_pert_18	17	0	-1	-1		1	2	How are the operations to sink and pop elements in a stack implemented ?
How	SCONJ	0	17_pert_19	17	0	0	0	301	0	0	How are the operations to toss and pop elements in a stack implemented ?
are	AUX	0	17_pert_19	17	0	0	1	302	0	0	How are the operations to toss and pop elements in a stack implemented ?
the	DET	0	17_pert_19	17	0	0	2	303	0	0	How are the operations to toss and pop elements in a stack implemented ?
operations	NOUN	0	17_pert_19	17	0	0	3	304	0	0	How are the operations to toss and pop elements in a stack implemented ?
to	PART	0	17_pert_19	17	0	0	4	305	0	0	How are the operations to toss and pop elements in a stack implemented ?
toss	VERB	0	17_pert_19	17	0	1	5	306	0	0	How are the operations to toss and pop elements in a stack implemented ?
and	CCONJ	0	17_pert_19	17	0	0	6	307	0	0	How are the operations to toss and pop elements in a stack implemented ?
pop	VERB	0	17_pert_19	17	0	0	7	308	0	0	How are the operations to toss and pop elements in a stack implemented ?
elements	NOUN	0	17_pert_19	17	0	0	8	309	0	0	How are the operations to toss and pop elements in a stack implemented ?
in	ADP	0	17_pert_19	17	0	0	9	310	0	0	How are the operations to toss and pop elements in a stack implemented ?
a	DET	0	17_pert_19	17	0	0	10	311	0	0	How are the operations to toss and pop elements in a stack implemented ?
stack	NOUN	0	17_pert_19	17	0	0	11	312	0	0	How are the operations to toss and pop elements in a stack implemented ?
implemented	VERB	0	17_pert_19	17	0	0	12	313	0	0	How are the operations to toss and pop elements in a stack implemented ?
?	PUNCT	0	17_pert_19	17	0	0	13	314	0	0	How are the operations to toss and pop elements in a stack implemented ?
20	['SCONJ', 'AUX', 'DET', 'NOUN', 'PART', 'VERB', 'CCONJ', 'VERB', 'NOUN', 'ADP', 'DET', 'NOUN', 'VERB', 'PUNCT']	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]	17_pert_19	17	0	-1	-1		1	2	How are the operations to toss and pop elements in a stack implemented ?
